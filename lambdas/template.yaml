AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 10

Resources:
  CatInsuranceApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        openapi: 3.0.0
        info:
          title: Cat Insurance API
          version: 1.0.0
        servers:
          - url: https://api.catinsurance.com/v1
        paths:
          /customers:
            get:
              x-amazon-apigateway-integration:
                uri:
                  Fn::GetAtt: [GetCustomersLambda, Arn]
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
              responses:
                "200":
                  description: List of customers
            post:
              x-amazon-apigateway-integration:
                uri:
                  Fn::GetAtt: [CreateCustomerLambda, Arn]
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
              responses:
                "201":
                  description: Customer created
                "400":
                  description: Invalid input data
          /customers/{customerId}:
            get:
              x-amazon-apigateway-integration:
                uri:
                  Fn::GetAtt: [GetCustomerLambda, Arn]
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
              responses:
                "200":
                  description: Customer details
            delete:
              x-amazon-apigateway-integration:
                uri:
                  Fn::GetAtt: [DeleteCustomerLambda, Arn]
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
              responses:
                "200":
                  description: Customer deleted
            patch:
              x-amazon-apigateway-integration:
                uri:
                  Fn::GetAtt: [UpdateCustomerLambda, Arn]
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
              responses:
                "200":
                  description: Customer updated
                "400":
                  description: Invalid input data

  GetCustomersFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/lambdas/customers/getCustomers.GetCustomers
      CodeUri: ./src/lambdas/customers/
      Role: arn:aws:iam::571832093814:role/catInsuranceRole
      Events:
        GetCustomersApi:
          Type: Api
          Properties:
            Path: /customers
            Method: get
  SearchCustomersFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/lambdas/customers/searchCustomers.SearchCustomers
      CodeUri: ./src/lambdas/customers/
      Role: arn:aws:iam::571832093814:role/catInsuranceRole
      Events:
        SearchCustomersApi:
          Type: Api
          Properties:
            Path: /customers/search
            Method: get
  CreateCustomerLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/lambdas/customers/
      Handler: src/lambdas/customers/createCustomer.CreateCustomer
      Runtime: provided.al2023
      Events:
        CreateCustomer:
          Type: Api
          Properties:
            RestApiId:
              Ref: CatInsuranceApi
            Path: /customers
            Method: post
  DeleteCustomerLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/lambdas/customers/
      Handler: src/lambdas/customers/deleteCustomer.DeleteCustomer
      Runtime: provided.al2023
      Events:
        DeleteCustomer:
          Type: Api
          Properties:
            RestApiId:
              Ref: CatInsuranceApi
            Path: /customers/{customerId}
            Method: delete
  CalculateRateLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/lambdas/contracts/
      Handler: src/lambdas/contracts/calculateRate.CalculateRate
      Runtime: provided.al2023
      Events:
        CalculateRate:
          Type: Api
          Properties:
            RestApiId:
              Ref: CatInsuranceApi
            Path: /contracts/rate
            Method: post
  CreateContractLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/lambdas/contracts/
      Handler: src/lambdas/contracts/createContract.CreateCustomer
      Runtime: provided.al2023
      Events:
        CreateContract:
          Type: Api
          Properties:
            RestApiId:
              Ref: CatInsuranceApi
            Path: /contracts
            Method: post

Outputs:
  CatInsuranceApiUrl:
    Description: URL of the Cat Insurance API
    Value:
      Fn::Sub: https://${CatInsuranceApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
